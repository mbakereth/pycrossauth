"""
This type stub file was generated by pyright.
"""

from collections.abc import MutableMapping

def base64url_encode(payload): # -> str:
    ...

def base64url_decode(payload): # -> bytes:
    ...

def json_encode(string): # -> str:
    ...

def json_decode(string): # -> Any:
    ...

class JWException(Exception):
    ...


class InvalidJWAAlgorithm(JWException):
    def __init__(self, message=...) -> None:
        ...
    


class InvalidCEKeyLength(JWException):
    """Invalid CEK Key Length.

    This exception is raised when a Content Encryption Key does not match
    the required length.
    """
    def __init__(self, expected, obtained) -> None:
        ...
    


class InvalidJWEOperation(JWException):
    """Invalid JWS Object.

    This exception is raised when a requested operation cannot
    be execute due to unsatisfied conditions.
    """
    def __init__(self, message=..., exception=...) -> None:
        ...
    


class InvalidJWEKeyType(JWException):
    """Invalid JWE Key Type.

    This exception is raised when the provided JWK Key does not match
    the type required by the specified algorithm.
    """
    def __init__(self, expected, obtained) -> None:
        ...
    


class InvalidJWEKeyLength(JWException):
    """Invalid JWE Key Length.

    This exception is raised when the provided JWK Key does not match
    the length required by the specified algorithm.
    """
    def __init__(self, expected, obtained) -> None:
        ...
    


class InvalidJWSERegOperation(JWException):
    """Invalid JWSE Header Registry Operation.

    This exception is raised when there is an error in trying to add a JW
    Signature or Encryption header to the Registry.
    """
    def __init__(self, message=..., exception=...) -> None:
        ...
    


class JWKeyNotFound(JWException):
    """The key needed to complete the operation was not found.

    This exception is raised when a JWKSet is used to perform
    some operation and the key required to successfully complete
    the operation is not found.
    """
    def __init__(self, message=...) -> None:
        ...
    


JWSEHeaderParameter = ...
class JWSEHeaderRegistry(MutableMapping):
    def __init__(self, init_registry=...) -> None:
        ...
    
    def check_header(self, h, value): # -> Literal[True]:
        ...
    
    def __getitem__(self, key):
        ...
    
    def __iter__(self): # -> Iterator[Any]:
        ...
    
    def __delitem__(self, key): # -> None:
        ...
    
    def __setitem__(self, h, jwse_header_param): # -> None:
        ...
    
    def __len__(self): # -> int:
        ...
    


